# Generated by Django 4.2.4 on 2023-12-03 09:04

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='信箱')),
                ('user_name', models.CharField(max_length=150, verbose_name='姓名')),
                ('phone_number', models.CharField(max_length=15, verbose_name='電話')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('address', models.CharField(max_length=255, verbose_name='地址')),
                ('bonus_points', models.IntegerField(default=0, verbose_name='點數')),
                ('branch_id', models.IntegerField(blank=True, null=True, verbose_name='店家ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='活躍帳戶')),
                ('is_staff', models.BooleanField(default=False, verbose_name='訪問後台權限')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='最後登入')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
